name: Hello world Web app image build and deploy
on:
  workflow_dispatch:
  release:
    types:
      - created

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install bump2version

      - name: Bump version (manual input for release, automatic based on commit messages otherwise)
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # Manual release: Prompt user for new version with input validation
            read -p "Please enter the new version (e.g., 1.2.3): " NEW_VERSION
            while ! [[ $NEW_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; do
              read -p "Invalid version format. Please enter a valid version: " NEW_VERSION
            done
            bump2version --config-file bumpversion.cfg --new-version="$NEW_VERSION"
          else
            # Automatic versioning based on commit messages (adjust based on your criteria)
            # Example using commit message prefixes like "fix", "feat", "major"
            if [[ "$(git log -1 --pretty=%B)" =~ ^fix ]]; then
              bump2version --config-file bumpversion.cfg --new-version patch
            elif [[ "$(git log -1 --pretty=%B)" =~ ^feat ]]; then
              bump2version --config-file bumpversion.cfg --new-version minor
            else
              # Default to patch for other changes
              bump2version --config-file bumpversion.cfg --new-version patch
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # Draft a new release on GitHub using generated version
      - name: Draft release on GitHub
        uses: nhost/action-create-release@v3
        with:
          tag_name: ${{ steps.release.outputs.new_version }}
          release_name: ${{ steps.release.outputs.new_version }}
          draft: true
          # Add release body and assets based on your workflow needs

  imagebuildandpush:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: rc3dockerregistry/helloworld:latest

  scan_docker_image:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    needs: [imagebuildandpush]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2

      - name: Log in to the Container registry üì¶
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Scan Docker image üê≥
        uses: snyk/actions/docker@master
        continue-on-error: true
        with:
          image: rc3dockerregistry/helloworld:latest
          args: --file=Dockerfile --severity-threshold=high --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload Snyk report as sarif üì¶
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  deploy_to_azure_app_service:
    runs-on: ubuntu-latest
    needs: [scan_docker_image]
    steps:
      - name: Deploy to Azure App Service
        uses: Azure/webapps-deploy@v2
        with:
          app-name: 'helloworldlldldld'  # Replace with your Azure App Service name
          # slot-name: 'production'  # Replace with your deployment slot if applicable
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
