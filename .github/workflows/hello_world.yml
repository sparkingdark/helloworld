name: Hello world Web app image build and deploy

on:
  workflow_dispatch:
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.tag.outputs.new_tag }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    - name: Minor version for each merge
      id: tag
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        WITH_V: true
        DRY_RUN: false
    # auto releases is not working atm and is deleting releases due branch tags
    - name: automatic-draft-release
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        draft: true
        repo_token: ${{ secrets.GH_TOKEN }}
        title: "${{ steps.tag.outputs.tag }}: [title-edit-me] by:${{ github.actor }}"
        automatic_release_tag: ${{ steps.tag.outputs.new_tag }}
  imagebuildandpush:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: "rc3dockerregistry/helloworld:latest"
      - name: Build and push tagged
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: "rc3dockerregistry/helloworld:${{ needs.release.outputs.RELEASE_VERSION }}"

  scan_docker_image:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    needs: [imagebuildandpush]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2

      - name: Log in to the Container registry üì¶
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Scan Docker image üê≥
        uses: snyk/actions/docker@master
        continue-on-error: true
        with:
          image: "rc3dockerregistry/helloworld:latest"
          args: --file=Dockerfile --severity-threshold=high --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload Snyk report as sarif üì¶
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  deploy_to_azure_app_service:
    runs-on: ubuntu-latest
    needs: [scan_docker_image]
    steps:
      - name: Deploy to Azure App Service
        uses: Azure/webapps-deploy@v2
        with:
          app-name: 'helloworlddemoapp'  # Replace with your Azure App Service name
          # slot-name: 'production'  # Replace with your deployment slot if applicable
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
