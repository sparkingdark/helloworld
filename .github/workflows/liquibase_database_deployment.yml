name: Test Database Table with Liquibase (Container)

on:
  push:
    branches: [ main ]

jobs:
  test-db-table:
    runs-on: ubuntu-latest
    services:
      # Choose your desired database service (MySQL or PostgreSQL)
      db:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3

      # Install Liquibase
      - name: Install Liquibase
        run: |
            sudo wget -O- https://repo.liquibase.com/liquibase.asc | gpg --dearmor > liquibase-keyring.gpg && \
            sudo cat liquibase-keyring.gpg | sudo tee /usr/share/keyrings/liquibase-keyring.gpg > /dev/null && \
            sudo echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/liquibase-keyring.gpg] https://repo.liquibase.com stable main' | sudo tee /etc/apt/sources.list.d/liquibase.list
            sudo apt-get update
            sudo apt-get install liquibase
            liquibase --version

      # Configure Liquibase connection details (using service information)
      - name: Configure Liquibase connection (MySQL)
        env:
          LIQUIBASE_URL: jdbc:mysql://db:3306/test_db  # Adjust for your database name
          LIQUIBASE_USERNAME: root  # Adjust username if needed
          LIQUIBASE_PASSWORD: password  # Access from secrets
        run: |
          echo "Configured Liquibase connection for MySQL"

    #   - name: Configure Liquibase connection (PostgreSQL)
    #     env:
    #       LIQUIBASE_URL: jdbc:postgresql://db:5432/test_db  # Adjust for your database name
    #       LIQUIBASE_USERNAME: postgres  # Adjust username if needed
    #       LIQUIBASE_PASSWORD: password  # Access from secrets
    #     run: |
    #       echo "Configured Liquibase connection for PostgreSQL"

      - name: Download && Move downloaded artifact
        run: |
            wget https://jdbc.postgresql.org/download/postgresql-42.3.6.jar
            sudo mv postgresql-42.3.6.jar "/lib"  # Adjust the path as needed
      - name: Add PostgreSQL JDBC driver to Liquibase classpath
        run: |
          echo "driver: org.postgresql.Driver" >> liquibase.properties
          echo "classpath: /lib/postgresql-42.3.6.jar" >> liquibase.properties
          echo "liquibase.secureParsing: false" >> liquibase.properties

      - name: Copy Liquibase changelog
        uses: actions/upload-artifact@v3
        with:
          name: liquibase-changelog
          path: database_change/changelog_v1.xml
     
      # Execute Liquibase update
      - name: Run Liquibase update
        run: |
          ls
          cd database_change
          liquibase --changeLogFile changelog_v1.xml update --url jdbc:postgresql://localhost:5432/test_db --username postgres --password password

      # Verify table creation (adjust query based on your table name

      - name: Verify table creation (PostgreSQL)
        run: |
          psql -h db -U postgres -d test_db -t -c "SELECT * FROM information_schema.tables WHERE table_name = 'testdb'" | grep testdb|| exit 1
